# create Deployment for Rust Actix external app

apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-app
  namespace: cloudns
spec:
  selector:
    matchLabels:
      app: external
  replicas: 2
  template:
    metadata:
      labels:
        app: external
    spec:
      # hostNetwork: true
      containers:
        - name: external-app
          image: glebcom/actix-app:latest
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - name: local
              containerPort: 8080
              protocol: TCP
          env:
            - name: FASTAPI_SERVICE_HOSTNAME
              # value: "http://fastapi-app"
              valueFrom:
                configMapKeyRef:
                  name: config-map
                  key: fastapi_service_hostname
          volumeMounts:
            - name: config
              mountPath: "/config"
              readOnly: true
          # livenessProbe:
          #   httpGet:
          #     port: local
          #     path: /liveness
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          # readinessProbe:
          #   httpGet:
          #     port: local
          #     path: /readiness
          #   initialDelaySeconds: 5
          #   periodSeconds: 3
      volumes:
        - name: config
          configMap:
            name: config-map

---
# create ClusterIP internal Service

# apiVersion: v1
# kind: Service
# metadata:
#   name: actix-internal-service
#   namespace: cloudns
# spec:
#   type: ClusterIP
#   selector:
#     app: external
#   ports:
#     - port: 80 # port of service
#       targetPort: local # port of container
#       protocol: TCP

apiVersion: v1
kind: Service
metadata:
  name: actix-internal-service
  namespace: cloudns
spec:
  selector:
    app: external
  ports:
    - protocol: TCP
      port: 80
      targetPort: local
# ---
# create LoadBalancer Service

# apiVersion: v1
# kind: Service
# metadata:
#   name: external-app-service
#   namespace: cloudns
# spec:
#   type: LoadBalancer
#   selector:
#     app: external
#   ports:
#     - protocol: TCP
#       port: 8090 # localhost:8090
#       targetPort: local
